---
Checks: >
  -*,
  readability-*,
  google-*,
  misc-*,
  performance-*,
  bugprone-*,
  -modernize-*,
  -readability-implicit-bool-conversion,
  -performance-avoid-endl,
  -misc-include-cleaner,
  -performance-enum-size,


CheckOptions:
  # return が1行の場合でも必ず {} を付ける
  - key: readability-braces-around-statements.ShortStatementLines
    value: 0
  
  # 関数の最大行数を30行に制限
  - key: readability-function-size.LineThreshold
    value: 30
  
  # 関数の最大文数も制限（オプション）
  - key: readability-function-size.StatementThreshold
    value: 50
  
  # 関数の最大パラメータ数を制限（オプション）
  - key: readability-function-size.ParameterThreshold
    value: 8
  
  # 変数名の最小長
  - key: readability-identifier-length.MinimumVariableNameLength
    value: 2
  
  # ループ変数名の最小長（i, jなどを許可）
  - key: readability-identifier-length.MinimumLoopCounterNameLength
    value: 1

  - key: readability-identifier-length.MinimumParameterNameLength
    value: 2

  # 早期リターンとガード節に関するチェック
  - key:             readability-else-after-return.WarnOnConditionVariables
    value:           'true'
  - key:             misc-redundant-expression.WarnOnConditionVariables
    value:           'true'
  - key:             readability-simplify-boolean-expr.ChainedConditionalReturn
    value:           'true'
  - key:             bugprone-branch-clone.MinSimilarity
    value:           '70'
  - key:             readability-implicit-bool-conversion.AllowIntegerConditions
    value:           'false'

# 早期リターンを推奨するカスタムチェック
  - key:             readability-early-return.Enable
    value:           'true'
  - key:             readability-early-return.MaxNestedBlocks
    value:           '3'
  - key:             readability-early-return.AllowReturnInElse
    value:           'false'

# C++98互換性設定
  - key:             modernize-use-nullptr.Cpp98Compat
    value:           'true'
  - key:             modernize-use-override.Cpp98Compat
    value:           'true'

# メモリ管理関連
  - key:             cppcoreguidelines-owning-memory.Cpp98Compat
    value:           'true'
  - key:             cppcoreguidelines-no-malloc.Cpp98Compat
    value:           'true'

# 警告をエラーとして扱うかどうか
WarningsAsErrors: '*'

# フォーマット設定（clang-formatと連携）
FormatStyle: google

# compile_commands.jsonがある場合は自動的に使用される
# 手動でコンパイルオプションを指定する場合:
# clang-tidy src/main.cpp -- -std=c++98 -Isrc -Iinclude
